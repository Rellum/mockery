// ImportsSameAsPackage is an autogenerated mock type for the ImportsSameAsPackage type
type ImportsSameAsPackage struct {
	mock.Mock
}

// TSetup will assert the mock expectations once the test completes.
func (_m *ImportsSameAsPackage) TSetup(t mock.TestingT, expectedCalls ...*mock.Call) *ImportsSameAsPackage {
	_m.ExpectedCalls = append(_m.ExpectedCalls, expectedCalls...)
	if t, ok := t.(interface {
		mock.TestingT
		Cleanup(func())
	}); ok {
		t.Cleanup(func() { _m.AssertExpectations(t) })
	}
	return _m
}

// A provides a mock function with given fields:
func (_m *ImportsSameAsPackage) A() test.B {
	ret := _m.Called()

	var r0 test.B
	if rf, ok := ret.Get(0).(func() test.B); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(test.B)
	}

	return r0
}

// B provides a mock function with given fields:
func (_m *ImportsSameAsPackage) B() fixtures.KeyManager {
	ret := _m.Called()

	var r0 fixtures.KeyManager
	if rf, ok := ret.Get(0).(func() fixtures.KeyManager); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(fixtures.KeyManager)
		}
	}

	return r0
}

// C provides a mock function with given fields: _a0
func (_m *ImportsSameAsPackage) C(_a0 fixtures.C) {
	_m.Called(_a0)
}
